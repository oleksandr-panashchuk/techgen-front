{"version":3,"file":"static/js/845.98b7fc14.chunk.js","mappings":"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","sources":["components/pages/SignUp.tsx","hooks/useFormSaving.ts","styles/authStyles.ts"],"sourcesContent":["import {\n  Box,\n  Button,\n  Card,\n  Center,\n  PasswordInput,\n  Stack,\n  Text,\n  TextInput,\n} from '@mantine/core';\nimport { useForm } from '@mantine/form';\nimport { useMediaQuery } from '@mantine/hooks';\nimport { useFormSaving } from 'hooks/useFormSaving';\nimport * as React from 'react';\nimport { FormEventHandler } from 'react';\nimport { useStyles } from '../../styles/authStyles';\nimport { IconAt } from '@tabler/icons';\n\nexport interface ISignUpFormValues {\n  email: string;\n  password: string;\n  repeatedPassword: string;\n}\n\nconst SignUp = (): JSX.Element => {\n  const { classes } = useStyles();\n\n  //* media query\n  const largerThan481 = useMediaQuery('(min-width: 481px)');\n\n  //* validate email\n  const validateEmail = (value: string): null | string => {\n    const validRegex: RegExp =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (validRegex.test(value)) return null;\n    else return 'Invalid email';\n  };\n\n  //* validate password\n  const validatePassword = (value: string): null | string => {\n    //* minimum 8 eight characters: digit, symbol, uppercase, lowercase\n    const validRegex: RegExp =\n      /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})/;\n\n    if (validRegex.test(value)) return null;\n    else\n      return 'Password must include minimum 8 characters: digit, symbol, uppercase, lowercase';\n  };\n\n  //* form\n  const form = useForm<ISignUpFormValues>({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatedPassword: '',\n    },\n    validate: {\n      email: validateEmail,\n      password: validatePassword,\n      repeatedPassword: validatePassword,\n    },\n  });\n\n  useFormSaving<ISignUpFormValues>(form, 'signUp');\n\n  //* checking if password equal\n  const { password, repeatedPassword } = form.values;\n\n  if (repeatedPassword.length > 0 && repeatedPassword !== password) {\n    form.errors.repeatedPassword = \"Passwords aren't same\";\n  }\n\n  if (password === repeatedPassword && form.errors.password) {\n    form.errors.repeatedPassword = null;\n  }\n\n  //* submit\n  const onSubmit: FormEventHandler<HTMLFormElement> = form.onSubmit(values => {\n    console.log(values);\n    form.reset();\n  });\n\n  return (\n    <Box>\n      <Card className={classes.card} px={largerThan481 ? 0 : '4%'} radius=\"md\">\n        <Text\n          className={classes.card_welcome_text}\n          data-aos=\"zoom-in\"\n          data-aos-duration=\"900\"\n        >\n          Youâ€™re welcome! ðŸ‘‹\n        </Text>\n        <Text\n          className={classes.card_signup_text}\n          data-aos=\"zoom-in\"\n          data-aos-duration=\"1800\"\n        >\n          Sign up your new account\n        </Text>\n        <form onSubmit={onSubmit}>\n          <Stack spacing=\"md\">\n            <TextInput\n              {...form.getInputProps('email')}\n              size=\"md\"\n              radius=\"md\"\n              label=\"Email\"\n              icon={<IconAt size={18} />}\n            />\n            <PasswordInput\n              {...form.getInputProps('password')}\n              size=\"md\"\n              radius=\"md\"\n              label=\"Password\"\n            />\n            <PasswordInput\n              {...form.getInputProps('repeatedPassword')}\n              size=\"md\"\n              radius=\"md\"\n              label=\"Repeat password\"\n            />\n            <Center>\n              <Text className={classes.privacy_policy_text}>\n                I agreed with Privacy Policy\n              </Text>\n            </Center>\n          </Stack>\n          <Button type=\"submit\" className={classes.card_btn}>\n            sign up\n          </Button>\n        </form>\n        <Center>\n          <Text className={classes.account_text}>\n            Already have an account?{' '}\n            <Text c=\"#625BF7\" component=\"a\" href=\"/techgen-front/signIn\">\n              Sign in\n            </Text>\n          </Text>\n        </Center>\n      </Card>\n    </Box>\n  );\n};\n\nexport default SignUp;\n","import { UseFormReturnType } from '@mantine/form';\nimport { useEffect } from 'react';\n\nexport const useFormSaving = <IInitialFormValues>(\n  form: UseFormReturnType<\n    IInitialFormValues,\n    (values: IInitialFormValues) => IInitialFormValues\n  >,\n  key: string\n) => {\n  //* getting values if exist\n  useEffect(() => {\n    const storedValue = window.sessionStorage.getItem(key);\n    if (storedValue) {\n      try {\n        form.setValues(\n          JSON.parse(window.sessionStorage.getItem(key) as string)\n        );\n      } catch (e) {\n        console.log('Failed to parse stored value');\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //* saving when value change\n  useEffect(() => {\n    window.sessionStorage.setItem(key, JSON.stringify(form.values));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form.values]);\n};\n","import { createStyles } from '@mantine/core';\n\nexport const useStyles = createStyles({\n  card: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    height: 'auto',\n    filter: 'drop-shadow(0px 4px 100px rgba(121, 126, 249, 0.19))',\n\n    '@media (min-width: 320px)': {\n      width: '92%',\n    },\n    '@media (min-width: 481px)': {\n      width: '60%',\n    },\n    '@media (min-width: 769px)': {\n      width: '30%',\n    },\n  },\n\n  card_welcome_text: {\n    fontWeight: 400,\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: 'rgba(241, 241, 241, 0.85)',\n\n    '@media (min-width: 320px)': {\n      marginTop: '33px',\n    },\n    '@media (min-width: 481px)': {\n      marginTop: '43px',\n    },\n  },\n\n  card_signup_text: {\n    fontWeight: 500,\n    fontSize: '24px',\n    color: '#E6E6E6',\n    marginTop: '5px',\n    marginBottom: '30px',\n  },\n\n  card_btn: {\n    color: '#ffffff',\n    background: '#625BF7',\n    borderRadius: '6px',\n    height: '45px',\n    padding: '9px 14px',\n    textTransform: 'uppercase',\n    fontWeight: 600,\n    fontSize: '16px',\n    marginTop: '25px',\n    width: '100%',\n    transition: '0.4s ease-in-out',\n\n    '&:hover': { background: '#5852cc' },\n  },\n\n  privacy_policy_text: {\n    color: '#6A6A6A',\n    fontSize: '12px',\n  },\n\n  account_text: {\n    color: '#6A6A6A',\n    fontSize: '12px',\n    marginTop: '15px',\n  },\n\n  forget_password_text: {\n    color: '#625BF7',\n    fontWeight: 700,\n    fontSize: '12px',\n    marginTop: '20px',\n  },\n});\n"],"names":["classes","useStyles","largerThan481","useMediaQuery","validatePassword","value","test","form","useForm","initialValues","email","password","repeatedPassword","validate","useFormSaving","values","length","errors","onSubmit","console","log","reset","className","card","px","radius","card_welcome_text","card_signup_text","spacing","getInputProps","size","label","icon","privacy_policy_text","type","card_btn","account_text","c","component","href","key","useEffect","window","sessionStorage","getItem","setValues","JSON","parse","e","setItem","stringify","createStyles","position","top","left","transform","height","filter","width","fontWeight","fontSize","lineHeight","color","marginTop","marginBottom","background","borderRadius","padding","textTransform","transition","forget_password_text"],"sourceRoot":""}