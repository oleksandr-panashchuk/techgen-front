{"version":3,"file":"static/js/845.9453283d.chunk.js","mappings":"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","sources":["authValidation.ts","components/pages/SignUp.tsx","hooks/useFormSaving.ts","styles/authStyles.ts"],"sourcesContent":["//* validate email\nexport const validateEmail = (value: string): null | string => {\n  const validRegex: RegExp =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (validRegex.test(value)) return null;\n  else return 'Invalid email';\n};\n\n//* validate password\nexport const validatePassword = (value: string): null | string => {\n  //* minimum 8 eight characters: digit, symbol, uppercase, lowercase\n  const validRegex: RegExp =\n    /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})/;\n\n  if (validRegex.test(value)) return null;\n  else\n    return 'Password must include minimum 8 characters: digit, symbol, uppercase, lowercase';\n};\n\n//* validate is empty\nexport const validateIsEmpty = (value: string): null | string => {\n  if (value.length === 0) return 'Required'\n  else return null\n}\n\n//* validate email and is empty\nexport const validateEmailAndIsEmpty = (value: string): null | string => validateIsEmpty(value) || validateEmail(value)\n","import {\n  BackgroundImage,\n  Button,\n  Card,\n  Center,\n  PasswordInput,\n  Stack,\n  Text,\n  TextInput,\n} from '@mantine/core';\nimport { useForm } from '@mantine/form';\nimport { useMediaQuery } from '@mantine/hooks';\nimport { useFormSaving } from 'hooks/useFormSaving';\nimport React, { FormEventHandler } from 'react';\nimport { useStyles } from '../../styles/authStyles';\nimport { IconAt } from '@tabler/icons';\nimport authBgSrc from '../../images/authBg.png';\nimport { validateEmailAndIsEmpty, validateIsEmpty, validatePassword } from 'authValidation';\n\nexport interface ISignUpFormValues {\n  email: string;\n  password: string;\n  repeatedPassword: string;\n}\n\nconst SignUp = (): JSX.Element => {\n  const { classes } = useStyles();\n\n  //* media query\n  const largerThan481 = useMediaQuery('(min-width: 481px)');\n\n  //* form\n  const form = useForm<ISignUpFormValues>({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatedPassword: '',\n    },\n    validate: {\n      email: validateEmailAndIsEmpty,\n      password: validatePassword,\n      repeatedPassword: validateIsEmpty,\n    },\n  });\n\n  //* saving inputs values\n  const resetSavedValues = useFormSaving<ISignUpFormValues>(form, 'signUp');\n\n  //* checking if password equal\n  const { email, password, repeatedPassword } = form.values;\n\n  if (repeatedPassword.length > 0 && repeatedPassword !== password) {\n    form.errors.repeatedPassword = \"Passwords aren't same\";\n  }\n\n  if (password === repeatedPassword && form.errors.password && email) {\n    form.errors.repeatedPassword = null;\n  }\n\n  //* submit\n  const submit: FormEventHandler<HTMLFormElement> = form.onSubmit(values => {\n    console.log(values);\n    resetSavedValues();\n    form.reset();\n  });\n\n  return (\n    <BackgroundImage className={classes.container} src={authBgSrc}>\n      <Card\n        className={classes.card}\n        px={largerThan481 ? '3%' : '4%'}\n        radius=\"md\"\n      >\n        <Text\n          className={classes.card_helper_text}\n          data-aos=\"zoom-in\"\n          data-aos-duration=\"900\"\n        >\n          Youâ€™re welcome! ðŸ‘‹\n        </Text>\n        <Text\n          className={classes.card_title_text}\n          data-aos=\"zoom-in\"\n          data-aos-duration=\"1800\"\n        >\n          Sign up your new account\n        </Text>\n        <form onSubmit={submit}>\n          <Stack spacing=\"md\">\n            <TextInput\n              {...form.getInputProps('email')}\n              size=\"md\"\n              radius=\"md\"\n              label=\"Email\"\n              icon={<IconAt size={18} />}\n            />\n            <PasswordInput\n              {...form.getInputProps('password')}\n              size=\"md\"\n              radius=\"md\"\n              label=\"Password\"\n            />\n            <PasswordInput\n              {...form.getInputProps('repeatedPassword')}\n              size=\"md\"\n              radius=\"md\"\n              label=\"Repeat password\"\n            />\n            <Center>\n              <Text className={classes.privacy_policy_text}>\n                I agreed with Privacy Policy\n              </Text>\n            </Center>\n          </Stack>\n          <Button type=\"submit\" className={classes.card_btn}>\n            sign up\n          </Button>\n        </form>\n        <Center>\n          <Text className={classes.account_text}>\n            Already have an account?{' '}\n            <Text c=\"#625BF7\" component=\"a\" href=\"/techgen-front/signIn\">\n              Sign in\n            </Text>\n          </Text>\n        </Center>\n      </Card>\n    </BackgroundImage>\n  );\n};\n\nexport default SignUp;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { UseFormReturnType } from '@mantine/form';\nimport { useEffect, useState } from 'react';\n\nexport const useFormSaving = <IInitialFormValues>(\n  form: UseFormReturnType<\n    IInitialFormValues,\n    (values: IInitialFormValues) => IInitialFormValues\n  >,\n  key: string\n): () => void => {\n  const [needReset, setNeedReset] = useState<boolean>(false)\n\n  //* getting values if exist\n  useEffect(() => {\n    const storedValue = sessionStorage.getItem(key);\n    if (storedValue) {\n      try {\n        form.setValues(\n          JSON.parse(sessionStorage.getItem(key) as string)\n        );\n      } catch (e) {\n        console.log('Failed to parse stored value');\n      }\n    }\n  }, []);\n\n  //* saving when value change\n  useEffect(() => {\n    sessionStorage.setItem(key, JSON.stringify(form.values));\n  }, [form.values]);\n\n  //* reset fields\n  const resetFields = (): void => setNeedReset(true)\n\n  const reset = (): void => {\n    sessionStorage.removeItem(key)\n    setNeedReset(false)\n  }\n\n  //* reset\n  useEffect(() => {\n    needReset && reset()\n  }, [needReset])\n\n  return resetFields\n};\n","import { createStyles } from '@mantine/core';\n\nexport const useStyles = createStyles({\n  container: {\n    width: '100%',\n    height: '100vh',\n  },\n\n  card: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    height: 'auto',\n    filter: 'drop-shadow(0px 4px 100px rgba(121, 126, 249, 0.19))',\n\n    '@media (min-width: 320px)': {\n      width: '92%',\n    },\n    '@media (min-width: 481px)': {\n      width: '60%',\n    },\n    '@media (min-width: 769px)': {\n      width: '30%',\n    },\n  },\n\n  card_helper_text: {\n    fontWeight: 400,\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: 'rgba(241, 241, 241, 0.85)',\n\n    '@media (min-width: 320px)': {\n      marginTop: '33px',\n    },\n    '@media (min-width: 481px)': {\n      marginTop: '43px',\n    },\n  },\n\n  card_title_text: {\n    fontWeight: 500,\n    fontSize: '24px',\n    color: '#E6E6E6',\n    marginTop: '5px',\n    marginBottom: '30px',\n  },\n\n  card_btn: {\n    color: '#ffffff',\n    background: '#625BF7',\n    borderRadius: '6px',\n    height: '45px',\n    padding: '9px 14px',\n    textTransform: 'uppercase',\n    fontWeight: 700,\n    fontSize: '16px',\n    marginTop: '25px',\n    width: '100%',\n    transition: '0.4s ease-in-out',\n\n    '&:hover': { background: '#5852cc' },\n  },\n\n  privacy_policy_text: {\n    color: '#6A6A6A',\n    fontSize: '12px',\n  },\n\n  account_text: {\n    color: '#6A6A6A',\n    fontSize: '12px',\n    marginTop: '15px',\n  },\n\n  forgot_password_text: {\n    color: '#625BF7',\n    fontWeight: 700,\n    fontSize: '12px',\n    marginTop: '20px',\n  },\n});\n"],"names":["validatePassword","value","test","validateIsEmpty","length","validateEmailAndIsEmpty","validateEmail","classes","useStyles","largerThan481","useMediaQuery","form","useForm","initialValues","email","password","repeatedPassword","validate","resetSavedValues","useFormSaving","values","errors","submit","onSubmit","console","log","reset","className","container","src","authBgSrc","card","px","radius","card_helper_text","card_title_text","spacing","getInputProps","size","label","icon","privacy_policy_text","type","card_btn","account_text","c","component","href","key","useState","needReset","setNeedReset","useEffect","sessionStorage","getItem","setValues","JSON","parse","e","setItem","stringify","removeItem","createStyles","width","height","position","top","left","transform","filter","fontWeight","fontSize","lineHeight","color","marginTop","marginBottom","background","borderRadius","padding","textTransform","transition","forgot_password_text"],"sourceRoot":""}