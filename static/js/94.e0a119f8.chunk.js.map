{"version":3,"file":"static/js/94.e0a119f8.chunk.js","mappings":"iRAsGA,UAhFe,WACb,IAAQA,GAAYC,EAAAA,EAAAA,KAAZD,QAGFE,GAAgBC,EAAAA,EAAAA,GAAc,sBAG9BC,GAAOC,EAAAA,EAAAA,GAA4B,CACvCC,cAAe,CACbC,aAAc,GACdC,SAAU,OAIdC,EAAAA,EAAAA,GAAkCL,EAAM,UAGxC,IAAMM,EAA8CN,EAAKM,UAAS,SAAAC,GAChEC,QAAQC,IAAIF,GACZP,EAAKU,OACN,IAED,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAMC,UAAWf,EAAQgB,KAAMC,GAAIf,EAAgB,EAAI,KAAMgB,OAAO,KAApE,WACE,SAAC,IAAD,CACEH,UAAWf,EAAQmB,kBACnB,WAAS,UACT,oBAAkB,MAHpB,gDAOA,SAAC,IAAD,CACEJ,UAAWf,EAAQoB,iBACnB,WAAS,UACT,oBAAkB,OAHpB,uCAOA,kBAAMV,SAAUA,EAAhB,WACE,UAAC,IAAD,CAAOW,QAAQ,KAAf,WACE,SAAC,KAAD,kBACMjB,EAAKkB,cAAc,iBADzB,IAEEC,KAAK,KACLL,OAAO,KACPM,MAAM,0BAER,SAAC,KAAD,kBACMpB,EAAKkB,cAAc,aADzB,IAEEC,KAAK,KACLL,OAAO,KACPM,MAAM,kBAGV,SAAC,IAAD,CACEC,KAAK,SACLC,GAAI,CAAEC,UAAW,MACjBZ,UAAWf,EAAQ4B,SAHrB,yBAQF,SAAC,IAAD,WACE,SAAC,IAAD,CAAMb,UAAWf,EAAQ6B,qBAAzB,sCAIF,SAAC,IAAD,WACE,UAAC,IAAD,CAAMd,UAAWf,EAAQ8B,aAAzB,qCAC2B,KACzB,SAAC,IAAD,CAAMC,EAAE,UAAUC,UAAU,IAAIC,KAAK,UAArC,8BAQX,C,qECjGYxB,EAAgB,SAC3BL,EAIA8B,IAGAC,EAAAA,EAAAA,YAAU,WAER,GADoBC,OAAOC,eAAeC,QAAQJ,GAEhD,IACE9B,EAAKmC,UACHC,KAAKC,MAAML,OAAOC,eAAeC,QAAQJ,IAI5C,CAFC,MAAOQ,GACP9B,QAAQC,IAAI,+BACb,CAGJ,GAAE,KAGHsB,EAAAA,EAAAA,YAAU,WACRC,OAAOC,eAAeM,QAAQT,EAAKM,KAAKI,UAAUxC,EAAKO,QAExD,GAAE,CAACP,EAAKO,QACV,C,2DC5BYV,GAAY4C,E,QAAAA,GAAa,CAClC7B,KAAM,CACJ8B,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,OAAQ,OACRC,OAAQ,uDAER,4BAA6B,CAC3BC,MAAO,OAET,4BAA6B,CAC3BA,MAAO,OAET,4BAA6B,CAC3BA,MAAO,QAIXjC,kBAAmB,CACjBkC,WAAY,IACZC,SAAU,OACVC,WAAY,OACZC,MAAO,4BAEP,4BAA6B,CAC3B7B,UAAW,QAEb,4BAA6B,CAC3BA,UAAW,SAIfP,iBAAkB,CAChBiC,WAAY,IACZC,SAAU,OACVE,MAAO,UACP7B,UAAW,MACX8B,aAAc,QAGhB7B,SAAU,CACR4B,MAAO,UACPE,WAAY,UACZC,aAAc,MACdT,OAAQ,OACRU,QAAS,WACTC,cAAe,YACfR,WAAY,IACZC,SAAU,OACV3B,UAAW,OACXyB,MAAO,OACPU,WAAY,mBAEZ,UAAW,CAAEJ,WAAY,YAG3BK,oBAAqB,CACnBP,MAAO,UACPF,SAAU,QAGZxB,aAAc,CACZ0B,MAAO,UACPF,SAAU,OACV3B,UAAW,QAGbE,qBAAsB,CACpB2B,MAAO,UACPH,WAAY,IACZC,SAAU,OACV3B,UAAW,S","sources":["components/pages/SignIn.tsx","hooks/useFormSaving.ts","styles/authStyles.ts"],"sourcesContent":["import {\n  Box,\n  Card,\n  Stack,\n  TextInput,\n  PasswordInput,\n  Center,\n  Button,\n  Text,\n} from '@mantine/core';\nimport { useForm } from '@mantine/form';\nimport { useMediaQuery } from '@mantine/hooks';\nimport { useFormSaving } from 'hooks/useFormSaving';\nimport * as React from 'react';\nimport { FormEventHandler } from 'react';\nimport { useStyles } from '../../styles/authStyles';\n\nexport interface IInitialFormValues {\n  emailOrPhone: string;\n  password: string;\n}\n\nconst SignIn = (): JSX.Element => {\n  const { classes } = useStyles();\n\n  //* media query\n  const largerThan481 = useMediaQuery('(min-width: 481px)')\n\n  //* form\n  const form = useForm<IInitialFormValues>({\n    initialValues: {\n      emailOrPhone: '',\n      password: '',\n    },\n  });\n\n  useFormSaving<IInitialFormValues>(form, 'signIn');\n\n  //* submit\n  const onSubmit: FormEventHandler<HTMLFormElement> = form.onSubmit(values => {\n    console.log(values);\n    form.reset();\n  });\n\n  return (\n    <Box>\n      <Card className={classes.card} px={largerThan481 ? 0 : '4%'} radius=\"md\">\n        <Text\n          className={classes.card_welcome_text}\n          data-aos=\"zoom-in\"\n          data-aos-duration=\"900\"\n        >\n          Youâ€™re welcome! ðŸ‘‹\n        </Text>\n        <Text\n          className={classes.card_signup_text}\n          data-aos=\"zoom-in\"\n          data-aos-duration=\"1800\"\n        >\n          Sign up your new account\n        </Text>\n        <form onSubmit={onSubmit}>\n          <Stack spacing=\"md\">\n            <TextInput\n              {...form.getInputProps('emailOrPhone')}\n              size=\"md\"\n              radius=\"md\"\n              label=\"Your email or Phone\"\n            />\n            <PasswordInput\n              {...form.getInputProps('password')}\n              size=\"md\"\n              radius=\"md\"\n              label=\"Password\"\n            />\n          </Stack>\n          <Button\n            type=\"submit\"\n            sx={{ marginTop: '8%' }}\n            className={classes.card_btn}\n          >\n            sign in\n          </Button>\n        </form>\n        <Center>\n          <Text className={classes.forget_password_text}>\n            Forgot your password?\n          </Text>\n        </Center>\n        <Center>\n          <Text className={classes.account_text}>\n            Already have an account?{' '}\n            <Text c='#625BF7' component=\"a\" href=\"/signUp\">\n              Sign up\n            </Text>\n          </Text>\n        </Center>\n      </Card>\n    </Box>\n  );\n};\n\nexport default SignIn;\n","import { UseFormReturnType } from '@mantine/form';\nimport { useEffect } from 'react';\n\nexport const useFormSaving = <IInitialFormValues>(\n  form: UseFormReturnType<\n    IInitialFormValues,\n    (values: IInitialFormValues) => IInitialFormValues\n  >,\n  key: string\n) => {\n  //* getting values if exist\n  useEffect(() => {\n    const storedValue = window.sessionStorage.getItem(key);\n    if (storedValue) {\n      try {\n        form.setValues(\n          JSON.parse(window.sessionStorage.getItem(key) as string)\n        );\n      } catch (e) {\n        console.log('Failed to parse stored value');\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //* saving when value change\n  useEffect(() => {\n    window.sessionStorage.setItem(key, JSON.stringify(form.values));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form.values]);\n};\n","import { createStyles } from '@mantine/core';\n\nexport const useStyles = createStyles({\n    card: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      height: 'auto',\n      filter: 'drop-shadow(0px 4px 100px rgba(121, 126, 249, 0.19))',\n\n      '@media (min-width: 320px)': {\n        width: '92%',\n      },\n      '@media (min-width: 481px)': {\n        width: '60%',\n      },\n      '@media (min-width: 769px)': {\n        width: '30%',\n      },\n    },\n\n    card_welcome_text: {\n      fontWeight: 400,\n      fontSize: '14px',\n      lineHeight: '18px',\n      color: 'rgba(241, 241, 241, 0.85)',\n\n      '@media (min-width: 320px)': {\n        marginTop: '33px',\n      },\n      '@media (min-width: 481px)': {\n        marginTop: '43px',\n      },\n    },\n\n    card_signup_text: {\n      fontWeight: 500,\n      fontSize: '24px',\n      color: '#E6E6E6',\n      marginTop: '5px',\n      marginBottom: '30px',\n    },\n\n    card_btn: {\n      color: '#ffffff',\n      background: '#625BF7',\n      borderRadius: '6px',\n      height: '45px',\n      padding: '9px 14px',\n      textTransform: 'uppercase',\n      fontWeight: 600,\n      fontSize: '16px',\n      marginTop: '25px',\n      width: '100%',\n      transition: '0.4s ease-in-out',\n\n      '&:hover': { background: '#5852cc' },\n    },\n\n    privacy_policy_text: {\n      color: '#6A6A6A',\n      fontSize: '12px',\n    },\n\n    account_text: {\n      color: '#6A6A6A',\n      fontSize: '12px',\n      marginTop: '15px',\n    },\n\n    forget_password_text: {\n      color: '#625BF7',\n      fontWeight: 700,\n      fontSize: '12px',\n      marginTop: '20px',\n    },\n  });\n"],"names":["classes","useStyles","largerThan481","useMediaQuery","form","useForm","initialValues","emailOrPhone","password","useFormSaving","onSubmit","values","console","log","reset","className","card","px","radius","card_welcome_text","card_signup_text","spacing","getInputProps","size","label","type","sx","marginTop","card_btn","forget_password_text","account_text","c","component","href","key","useEffect","window","sessionStorage","getItem","setValues","JSON","parse","e","setItem","stringify","createStyles","position","top","left","transform","height","filter","width","fontWeight","fontSize","lineHeight","color","marginBottom","background","borderRadius","padding","textTransform","transition","privacy_policy_text"],"sourceRoot":""}